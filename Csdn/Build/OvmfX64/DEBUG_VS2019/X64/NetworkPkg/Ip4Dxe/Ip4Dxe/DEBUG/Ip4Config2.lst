//
//  VFR compiler version  2.01 (UEFI 2.4) Developer Build based on Revision: Unknown
//
#line 1 "D:\\uefi_specs_personal_collections\\edk2\\NetworkPkg\\Ip4Dxe\\Ip4Config2.vfr"
#line 1 "d:\\uefi_specs_personal_collections\\csdn\\Build\\OvmfX64\\DEBUG_VS2019\\X64\\NetworkPkg\\Ip4Dxe\\Ip4Dxe\\DEBUG\\Ip4DxeStrDefs.h"



































extern unsigned char Ip4DxeStrings[];








































#line 78 "d:\\uefi_specs_personal_collections\\csdn\\Build\\OvmfX64\\DEBUG_VS2019\\X64\\NetworkPkg\\Ip4Dxe\\Ip4Dxe\\DEBUG\\Ip4DxeStrDefs.h"

#line 80 "d:\\uefi_specs_personal_collections\\csdn\\Build\\OvmfX64\\DEBUG_VS2019\\X64\\NetworkPkg\\Ip4Dxe\\Ip4Dxe\\DEBUG\\Ip4DxeStrDefs.h"
#line 1 "D:\\uefi_specs_personal_collections\\edk2\\NetworkPkg\\Ip4Dxe\\Ip4Config2.vfr"







#line 1 "D:\\uefi_specs_personal_collections\\edk2\\NetworkPkg\\Ip4Dxe\\Ip4NvData.h"











#line 1 "D:\\uefi_specs_personal_collections\\edk2\\NetworkPkg\\Include\\Guid/Ip4Config2Hii.h"
















extern EFI_GUID  { 0x9b942747, 0x154e, 0x4d29, { 0xa4, 0x36, 0xbf, 0x71, 0x0, 0xc8, 0xb5, 0x3b }};

#line 20 "D:\\uefi_specs_personal_collections\\edk2\\NetworkPkg\\Include\\Guid/Ip4Config2Hii.h"
#line 13 "D:\\uefi_specs_personal_collections\\edk2\\NetworkPkg\\Ip4Dxe\\Ip4NvData.h"






















typedef struct {
  UINT8     Configure;                               
  UINT8     DhcpEnable;                              
  CHAR16    StationAddress[16];        
  CHAR16    SubnetMask[16];            
  CHAR16    GatewayAddress[16];        
  CHAR16    DnsAddress[255];        
} IP4_CONFIG2_IFR_NVDATA;

#line 45 "D:\\uefi_specs_personal_collections\\edk2\\NetworkPkg\\Ip4Dxe\\Ip4NvData.h"
#line 9 "D:\\uefi_specs_personal_collections\\edk2\\NetworkPkg\\Ip4Dxe\\Ip4Config2.vfr"



formset
>00000000: 0E A7 47 27 94 9B 4E 15 29 4D A4 36 BF 71 00 C8 B5 3B 02 00 03 00 01 71 99 03 93 45 85 04 4B B4 5E 32 EB 83 26 04 0E 
>00000051: 5C 06 00 00 00 00 
>00000057: 5C 06 00 00 01 00 
  guid     = { 0x9b942747, 0x154e, 0x4d29, { 0xa4, 0x36, 0xbf, 0x71, 0x0, 0xc8, 0xb5, 0x3b } },
  title    = STRING_TOKEN(0x0002),
  help     = STRING_TOKEN(0x0003),
  class    = 0x04,
>00000027: 5F 15 35 17 0B 0F A0 87 93 41 B2 66 53 8C 38 AF 48 CE 03 04 00 
  subclass = 0x03,
>0000003C: 5F 15 35 17 0B 0F A0 87 93 41 B2 66 53 8C 38 AF 48 CE 04 03 00 

  varstore IP4_CONFIG2_IFR_NVDATA,
>0000005D: 24 2D 47 27 94 9B 4E 15 29 4D A4 36 BF 71 00 C8 B5 3B 01 00 60 02 49 50 34 5F 43 4F 4E 46 49 47 32 5F 49 46 52 5F 4E 56 44 41 54 41 00 
    name = IP4_CONFIG2_IFR_NVDATA,
    guid = { 0x9b942747, 0x154e, 0x4d29, { 0xa4, 0x36, 0xbf, 0x71, 0x0, 0xc8, 0xb5, 0x3b } };

  form formid = 1,
>0000008A: 01 86 01 00 04 00 
    title  = STRING_TOKEN(0x0004);

    checkbox varid = IP4_CONFIG2_IFR_NVDATA.Configure,
>00000090: 06 8E 06 00 07 00 00 01 01 00 00 00 04 00 
            prompt = STRING_TOKEN(0x0006),
            help   = STRING_TOKEN(0x0007),
            flags  = INTERACTIVE,
            key    = 0x100,
    endcheckbox;
>0000009E: 29 02 

    suppressif ideqval IP4_CONFIG2_IFR_NVDATA.Configure == 0x00;
>000000A0: 0A 82 
>000000A2: 12 06 00 01 00 00 

      checkbox varid = IP4_CONFIG2_IFR_NVDATA.DhcpEnable,
>000000A8: 06 8E 08 00 08 00 01 01 01 00 01 00 04 00 
              prompt = STRING_TOKEN(0x0008),
              help   = STRING_TOKEN(0x0008),
              flags  = INTERACTIVE,
              key    = 0x101,
      endcheckbox;
>000000B6: 29 02 
    endif;
>000000B8: 29 02 

    suppressif ideqval IP4_CONFIG2_IFR_NVDATA.DhcpEnable == 0x01 OR ideqval IP4_CONFIG2_IFR_NVDATA.Configure == 0x00;
>000000BA: 0A 82 
>000000BC: 12 86 01 01 01 00 
>000000C2: 12 06 00 01 00 00 
>000000C8: 16 02 
>000000CA: 29 02 

      string  varid   = IP4_CONFIG2_IFR_NVDATA.StationAddress,
>000000CC: 1C 90 09 00 0A 00 02 01 01 00 02 00 04 07 0F 00 
              prompt  = STRING_TOKEN(0x0009),
              help    = STRING_TOKEN(0x000A),
              flags   = INTERACTIVE,
              key     = 0x102,
              minsize = 7,
              maxsize = 15,
      endstring;
>000000DC: 29 02 

      string  varid   = IP4_CONFIG2_IFR_NVDATA.SubnetMask,
>000000DE: 1C 90 0B 00 0C 00 03 01 01 00 22 00 04 07 0F 00 
              prompt  = STRING_TOKEN(0x000B),
              help    = STRING_TOKEN(0x000C),
              flags   = INTERACTIVE,
              key     = 0x103,
              minsize = 7,
             maxsize = 15,
      endstring;
>000000EE: 29 02 

      string  varid   = IP4_CONFIG2_IFR_NVDATA.GatewayAddress,
>000000F0: 1C 90 0D 00 0E 00 04 01 01 00 42 00 04 07 0F 00 
              prompt  = STRING_TOKEN(0x000D),
              help    = STRING_TOKEN(0x000E),
              flags   = INTERACTIVE,
              key     = 0x104,
              minsize = 7,
              maxsize = 15,
      endstring;
>00000100: 29 02 

      string  varid   = IP4_CONFIG2_IFR_NVDATA.DnsAddress,
>00000102: 1C 90 0F 00 10 00 05 01 01 00 62 00 04 07 FF 00 
              prompt  = STRING_TOKEN(0x000F),
              help    = STRING_TOKEN(0x0010),
              flags   = INTERACTIVE,
              key     = 0x105,
              minsize = 7,
              maxsize = 255,
      endstring;
>00000112: 29 02 

    endif;
>00000114: 29 02 

    subtitle text = STRING_TOKEN(0x0012);
>00000116: 02 87 12 00 00 00 00 
>0000011D: 29 02 

    text
      help   = STRING_TOKEN(0x0011),
      text   = STRING_TOKEN(0x0011),
      flags  = INTERACTIVE,
>0000011F: 0C 8F 11 00 11 00 06 01 00 00 FF FF 04 00 00 
      key    = 0x106;
>0000012E: 29 02 

  endform;
>00000130: 29 02 

endformset;
>00000132: 29 02 


//
// All Opcode Record List 
//
>00000000: 0E A7 47 27 94 9B 4E 15 29 4D A4 36 BF 71 00 C8 B5 3B 02 00 03 00 01 71 99 03 93 45 85 04 4B B4 5E 32 EB 83 26 04 0E 
>00000027: 5F 15 35 17 0B 0F A0 87 93 41 B2 66 53 8C 38 AF 48 CE 03 04 00 
>0000003C: 5F 15 35 17 0B 0F A0 87 93 41 B2 66 53 8C 38 AF 48 CE 04 03 00 
>00000051: 5C 06 00 00 00 00 
>00000057: 5C 06 00 00 01 00 
>0000005D: 24 2D 47 27 94 9B 4E 15 29 4D A4 36 BF 71 00 C8 B5 3B 01 00 60 02 49 50 34 5F 43 4F 4E 46 49 47 32 5F 49 46 52 5F 4E 56 44 41 54 41 00 
>0000008A: 01 86 01 00 04 00 
>00000090: 06 8E 06 00 07 00 00 01 01 00 00 00 04 00 
>0000009E: 29 02 
>000000A0: 0A 82 
>000000A2: 12 06 00 01 00 00 
>000000A8: 06 8E 08 00 08 00 01 01 01 00 01 00 04 00 
>000000B6: 29 02 
>000000B8: 29 02 
>000000BA: 0A 82 
>000000BC: 12 86 01 01 01 00 
>000000C2: 12 06 00 01 00 00 
>000000C8: 16 02 
>000000CA: 29 02 
>000000CC: 1C 90 09 00 0A 00 02 01 01 00 02 00 04 07 0F 00 
>000000DC: 29 02 
>000000DE: 1C 90 0B 00 0C 00 03 01 01 00 22 00 04 07 0F 00 
>000000EE: 29 02 
>000000F0: 1C 90 0D 00 0E 00 04 01 01 00 42 00 04 07 0F 00 
>00000100: 29 02 
>00000102: 1C 90 0F 00 10 00 05 01 01 00 62 00 04 07 FF 00 
>00000112: 29 02 
>00000114: 29 02 
>00000116: 02 87 12 00 00 00 00 
>0000011D: 29 02 
>0000011F: 0C 8F 11 00 11 00 06 01 00 00 FF FF 04 00 00 
>0000012E: 29 02 
>00000130: 29 02 
>00000132: 29 02 

Total Size of all record is 0x00000134


***************************************************************
		mPackAlign = 8
		struct IP4_CONFIG2_IFR_NVDATA : mAlign [2] mTotalSize [0x260]

		struct IP4_CONFIG2_IFR_NVDATA {
			+00000000[00000000] Configure <UINT8>
			+00000001[00000001] DhcpEnable <UINT8>
			+00000002[00000002] StationAddress[16] <UINT16>
			+00000034[00000022] SubnetMask[16] <UINT16>
			+00000066[00000042] GatewayAddress[16] <UINT16>
			+00000098[00000062] DnsAddress[255] <UINT16>
		};
---------------------------------------------------------------
		struct EFI_HII_REF : mAlign [16] mTotalSize [0x16]

		struct EFI_HII_REF {
			+00000000[00000000] QuestionId <UINT16>
			+00000002[00000002] FormId <UINT16>
			+00000004[00000004] FormSetGuid <(null)>
			+00000020[00000014] DevicePath <EFI_STRING_ID>
		};
---------------------------------------------------------------
		struct EFI_HII_TIME : mAlign [1] mTotalSize [0x3]

		struct EFI_HII_TIME {
			+00000000[00000000] Hours <UINT8>
			+00000001[00000001] Minutes <UINT8>
			+00000002[00000002] Seconds <UINT8>
		};
---------------------------------------------------------------
		struct EFI_STRING_ID : mAlign [2] mTotalSize [0x2]

		struct EFI_STRING_ID {
		};
---------------------------------------------------------------
		struct EFI_HII_DATE : mAlign [2] mTotalSize [0x4]

		struct EFI_HII_DATE {
			+00000000[00000000] Year <UINT16>
			+00000002[00000002] Month <UINT8>
			+00000003[00000003] Day <UINT8>
		};
---------------------------------------------------------------
		struct BOOLEAN : mAlign [1] mTotalSize [0x1]

		struct BOOLEAN {
		};
---------------------------------------------------------------
		struct UINT8 : mAlign [1] mTotalSize [0x1]

		struct UINT8 {
		};
---------------------------------------------------------------
		struct UINT16 : mAlign [2] mTotalSize [0x2]

		struct UINT16 {
		};
---------------------------------------------------------------
		struct UINT32 : mAlign [4] mTotalSize [0x4]

		struct UINT32 {
		};
---------------------------------------------------------------
		struct UINT64 : mAlign [8] mTotalSize [0x8]

		struct UINT64 {
		};
---------------------------------------------------------------
***************************************************************
